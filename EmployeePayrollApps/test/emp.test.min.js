'use strict';const chai=require("chai"),server=require("../server"),chaiHttp=require("chai-http");chai.should();chai.use(chaiHttp);const fs=require("fs");let data=fs.readFileSync("test/empdata.json"),emptest=JSON.parse(data);
describe("POST/login",()=>{it("Post To New Login EmpData",a=>{const d=emptest.data1;chai.request(server).post("/login").send(d).end((b,c)=>{c.should.have.status(200);c.body.should.be.property("success").eq(!0);c.body.should.be.property("message").eq("loged in successfully");c.body.should.be.property("token");a()})});it("Post  Data1 and gives the error 404",a=>{const d=emptest.data2;chai.request(server).post("/login").send(d).end((b,c)=>{c.should.have.status(404);c.body.should.be.property("success").eq(!1);
a()})})});describe("POST/add",()=>{it("it should be post in empdata",a=>{const d=emptest.data3;chai.request(server).post("/add").send(d).end((b,c)=>{c.should.have.status(200);c.body.should.be.property("message").eq("Employee Data Inserted successfully");a()})});it("it should be post in empdata",a=>{const d=emptest.data4;chai.request(server).post("/add").send(d).end((b,c)=>{c.should.have.status(400);c.body.should.be.property("message");a()})})});let jwToken="";
beforeEach(a=>{chai.request(server).post("/login").send(emptest.data1).end((d,b)=>{jwToken=b.body.token;b.should.have.status(200);a()})});let invalidToken=jwToken.slice(12),empToken="";
describe("/GET /employees",()=>{it("given valid token When retrived Should return status 200 and success=true",a=>{chai.request(server).get("/employees").set("Authorization","Bearar "+jwToken).end((d,b)=>{b.should.have.status(200);a()})});it("given invalidValid token When retrived Should return status 400 and success=false",a=>{chai.request(server).get("/employees").set("Authorization","Bearar   ").end((d,b)=>{b.should.have.status(400);b.body.should.have.property("success").eq(!1);a()})});it("given empty token When retrived Should return status 401 and success=false",
a=>{chai.request(server).get("/employees").set("Authorization",empToken).end((d,b)=>{b.should.have.status(401);b.body.should.have.property("success").eq(!1);a()})})});describe("/GET /employees/Id",()=>{it("given ObjectID and Valid token When retrived Should return status 200 and success=true",a=>{chai.request(server).get("/employees/"+emptest.data5.Id).set("Authorization","Bearar "+jwToken).end((d,b)=>{b.should.have.status(200);b.body.should.have.property("foundData");a()})})});